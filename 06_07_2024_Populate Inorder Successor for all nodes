// first approach

class Solution {
  public:
    //inorder left->root->right
    void inorder(Node *root,vector<Node*>&ans){
        //base case
        if(root != NULL){
            //recursive case
            inorder(root->left,ans);
            ans.push_back(root);
            inorder(root->right,ans);
        }
    }
    void populateNext(Node *root) {
        // code here
        vector<Node*>ans;
        inorder(root,ans);
        for(int i=0;i<ans.size()-1;i++){
            ans[i]->next=ans[i+1];
        }
    }
};


// second approach

class Solution {
  public:
    //inorder left->root->right
    void solve(Node *root,Node* &prev){
        //base case
        if(!root) return;
        //recursive code
        solve(root->left,prev);
        if(prev != NULL){
            prev->next=root;
        }
        prev=root;
        solve(root->right,prev);
        
    }
    void populateNext(Node *root) {
        // code here
        Node* prev=NULL;
        solve(root,prev);
    }
};



// Question link -> https://www.geeksforgeeks.org/problems/populate-inorder-successor-for-all-nodes/1
// Video Sol -> https://youtu.be/n1shpf4Ykxg?si=dkMG0pXeEchxraxv