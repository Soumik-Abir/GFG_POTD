class Solution {
  public:
    // Function to rotate a linked list.
    Node* rotate(Node* head, int k) {
        // Your code here
        if(head == NULL||head->next == NULL||k == 0) return head;
        //calculating length
        Node* temp = head;
        int length = 1;
        while(temp->next != NULL) {
            ++length;
            temp = temp->next;
        }
        //link last node to first node
        temp->next = head;
        while(k--) temp = temp->next;
        //breaking last node link and pointing to NULL
        head = temp->next;
        temp->next = NULL;
            
        return head;
    }
};

// Question link -> https://www.geeksforgeeks.org/problems/rotate-a-linked-list/1
// Video Sol -> https://youtu.be/9VPm6nEbVPA